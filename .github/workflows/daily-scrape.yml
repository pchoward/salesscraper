name: Daily Scrape
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    # Add explicit permissions needed for git operations
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 selenium webdriver-manager fake-useragent
      
      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version
      
      - name: Prepare environment
        run: |
          # Create and prepare temp directories with proper permissions
          sudo mkdir -p /tmp/chrome_tmp
          sudo chmod 777 /tmp/chrome_tmp
          
          # Clean up any existing Chrome processes
          sudo pkill -f chrome || true
          sudo pkill -f chromedriver || true
          
          # Clean up any lock files
          sudo rm -rf /tmp/.X*-lock || true
          sudo rm -rf /tmp/.com.google.Chrome* || true
          sudo rm -rf /tmp/chrome* || true
          
          # Set environment variable for temp directory
          echo "TMPDIR=/tmp/chrome_tmp" >> $GITHUB_ENV
      
      - name: Run scraper
        run: python zumiez_analyzer-grok3.py
        env:
          CI: true
          PYTHONUNBUFFERED: 1  # Ensure Python output is not buffered
      
      - name: List generated files
        run: |
          ls -la
          ls -la sale_items_chart.html || echo "sale_items_chart.html not found"
          ls -la previous_data.json || echo "previous_data.json not found"
          ls -la *debug*.html || echo "No debug files found"
      
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Check for and add files if they exist
          for file in sale_items_chart.html previous_data.json *debug*.html; do
            if ls $file 2>/dev/null; then
              git add "$file"
              echo "Added $file to git"
            fi
          done
          
          # Check if there are staged changes before committing
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update sale items data [skip ci]"
            git push
          fi
