name: Daily Scrape
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Fixed cron expression
  workflow_dispatch:
jobs:
  scrape:
    runs-on: ubuntu-latest
    container:
      image: selenium/standalone-chrome:latest  # Use a preconfigured container
      options: --shm-size=2g  # Increase shared memory
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 selenium webdriver-manager fake-useragent
      
      - name: Prepare environment
        run: |
          # Ensure temporary directories are available and clean
          mkdir -p /tmp/chrome-user-data
          chmod 777 /tmp/chrome-user-data
          rm -rf /tmp/chrome-user-data/*
          
          # Kill any stray Chrome processes
          ps aux | grep chrome | awk '{print $2}' | xargs kill -9 || true
          ps aux | grep chromedriver | awk '{print $2}' | xargs kill -9 || true
          
          # Clean up any ChromeDriver lock files
          find /tmp -name ".com.google.Chrome*" -exec rm -rf {} \; 2>/dev/null || true
          find /tmp -name "chrome_automation_*" -exec rm -rf {} \; 2>/dev/null || true
      
      - name: Run scraper
        run: python zumiez_analyzer-grok3.py
        env:
          CI: true
          PYTHONUNBUFFERED: 1
          DISPLAY: ":99.0"  # Virtual display for Chrome
      
      - name: List debug files
        run: ls -la *debug*.html || true
      
      - name: Check output files
        run: |
          ls -la sale_items_chart.html || echo "sale_items_chart.html not found"
          ls -la previous_data.json || echo "previous_data.json not found"
      
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Add files selectively with error handling
          git add sale_items_chart.html || echo "sale_items_chart.html not found, skipping"
          git add previous_data.json || echo "previous_data.json not found, skipping"
          git add *debug*.html || echo "No debug files found, skipping"
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update sale_items_chart.html with latest scrape data"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}